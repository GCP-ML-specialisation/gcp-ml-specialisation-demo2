# PIPELINE DEFINITION
# Name: model-evaluation
# Inputs:
#    test_set: system.Dataset
#    training_model: system.Model
# Outputs:
#    kpi: system.Metrics
#    model-evaluation-kpi: system.Metrics
components:
  comp-model-evaluation:
    executorLabel: exec-model-evaluation
    inputDefinitions:
      artifacts:
        test_set:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        training_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        kpi:
          artifactType:
            schemaTitle: system.Metrics
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-model-evaluation:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - model_evaluation
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pandas' 'numpy==1.23.5'\
          \ 'gcsfs' 'scikit-learn==1.3.0' 'joblib' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef model_evaluation(\n    test_set: Input[Dataset],\n    training_model:\
          \ Input[Model],\n    kpi: Output[Metrics],\n):\n    import pandas as pd\n\
          \    from math import sqrt\n    import os\n    import joblib\n    import\
          \ numpy as np\n    from sklearn.metrics import mean_squared_error, mean_absolute_error,\
          \ r2_score\n\n    data = pd.read_csv(test_set.path + \".csv\")\n    file_name\
          \ = os.path.join(training_model.path, \"model.joblib\")\n\n    model = joblib.load(file_name)\n\
          \n    X_test = data.drop(\"Purchase\", axis=1)\n    y_test = np.array(data[\"\
          Purchase\"])\n\n    xgb_y_pred = model.predict(X_test)\n\n    mae = mean_absolute_error(y_test,\
          \ xgb_y_pred)\n    mse = mean_squared_error(y_test, xgb_y_pred)\n    r2\
          \ = r2_score(y_test, xgb_y_pred)\n    rmse = sqrt(mean_squared_error(y_test,\
          \ xgb_y_pred))\n\n    training_model.metadata[\"mean_absolute_error\"] =\
          \ mae\n    training_model.metadata[\"mean_squared_error\"] = mse\n    training_model.metadata[\"\
          R2_Score\"] = r2\n    training_model.metadata[\"root_mean_squared_error\"\
          ] = rmse\n\n    kpi.log_metric(\"mean_absolute_error\", mae)\n    kpi.log_metric(\"\
          mean_squared_error\", mse)\n    kpi.log_metric(\"R2_Score\", r2)\n    kpi.log_metric(\"\
          root_mean_squared_error\", rmse)\n\n"
        image: python:3.10
pipelineInfo:
  name: model-evaluation
root:
  dag:
    outputs:
      artifacts:
        kpi:
          artifactSelectors:
          - outputArtifactKey: kpi
            producerSubtask: model-evaluation
        model-evaluation-kpi:
          artifactSelectors:
          - outputArtifactKey: kpi
            producerSubtask: model-evaluation
    tasks:
      model-evaluation:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-evaluation
        inputs:
          artifacts:
            test_set:
              componentInputArtifact: test_set
            training_model:
              componentInputArtifact: training_model
        taskInfo:
          name: model-evaluation
  inputDefinitions:
    artifacts:
      test_set:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
      training_model:
        artifactType:
          schemaTitle: system.Model
          schemaVersion: 0.0.1
  outputDefinitions:
    artifacts:
      kpi:
        artifactType:
          schemaTitle: system.Metrics
          schemaVersion: 0.0.1
      model-evaluation-kpi:
        artifactType:
          schemaTitle: system.Metrics
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
